plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'com.jfrog.artifactory'
    id 'maven-publish'
}

def libraryVersion = '1.0.1'  // vedi versionName + versionCode

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {

        codedebug {
            minifyEnabled false
            testCoverageEnabled false
            buildConfigField("String", "VERSION_NAME", "\"${defaultConfig.versionName}\"")
        }
        debug {
            minifyEnabled false
            testCoverageEnabled true
            buildConfigField("String", "VERSION_NAME", "\"${defaultConfig.versionName}\"")
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "VERSION_NAME", "\"${defaultConfig.versionName}\"")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'

    implementation 'androidx.preference:preference-ktx:1.1.1'

    // zebra
    implementation 'com.google.zxing:core:3.4.1'

    implementation 'com.google.android.gms:play-services-auth:19.2.0'
    implementation 'com.google.android.gms:play-services-auth-api-phone:17.5.1'
    implementation 'com.google.android.gms:play-services-vision:17.0.2', {
        exclude group: 'com.android.support'
    }

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

publishing {
    publications {
        aar(MavenPublication) {
            groupId 'net.aliaslab'
            version libraryVersion
            artifactId project.getName()

            if (libraryVersion.endsWith('DEBUG')) {
                artifact("$buildDir/outputs/aar/${project.getName()}-codedebug.aar")
            } else {
                artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
            }

            pom.withXml {
                def dependencies = asNode().appendNode('dependencies')
                configurations.getByName("releaseCompileClasspath").getResolvedConfiguration().getFirstLevelModuleDependencies().each {
                    def dependency = dependencies.appendNode('dependency')
                    dependency.appendNode('groupId', it.moduleGroup)
                    dependency.appendNode('artifactId', it.moduleName)
                    dependency.appendNode('version', it.moduleVersion)
                }
            }
        }
    }
}

artifactory {
    contextUrl = 'https://artifactory-new.aliaslab.net/artifactory'
    publish {
        repository {
            repoKey = libraryVersion.endsWith('SNAPSHOT') ? 'FlexQRReader_SDK_Android_Snapshot' : libraryVersion.endsWith('DEBUG') ? 'FlexQRReader_SDK_Android_Debug' : 'FlexQRReader_SDK_Android_Release'

            username = project.findProperty('artifactoryUser') ?: 'user'
            password = project.findProperty('artifactoryPassword') ?: 'password'
        }
        defaults {
            // Tell the Artifactory Plugin which artifacts should be published to Artifactory.
            publications('aar')
            publishArtifacts = true

            // Publish generated POM files to Artifactory (true by default)
            publishPom = true
        }
    }
}